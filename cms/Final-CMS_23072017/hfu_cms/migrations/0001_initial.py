# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2018-02-20 11:34
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ambulance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('address', models.CharField(blank=True, max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('telephone', models.CharField(blank=True, help_text='Ambulance Telephone', max_length=20000, null=True)),
                ('mobile', models.CharField(blank=True, help_text='Ambulance mobile', max_length=20000, null=True)),
                ('type', models.CharField(blank=True, max_length=10000, null=True)),
                ('service', models.CharField(blank=True, max_length=10000, null=True)),
                ('service_contact_person', models.CharField(blank=True, max_length=10000, null=True)),
                ('remarks', models.CharField(blank=True, max_length=10000, null=True)),
                ('previous_user', models.IntegerField(null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('is_emergency', models.BooleanField(default=False)),
                ('rates', models.CharField(blank=True, max_length=10000, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ambulance_type_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Ambulance_Type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AmbulanceServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Listing of Ambulance Services', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Ambulance Service')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssociateDoctorWithOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Attach_dietitian_organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultancy_fee', models.CharField(blank=True, max_length=10000, null=True)),
                ('email_attach', models.CharField(blank=True, max_length=10000, null=True)),
                ('telephone_attach', models.CharField(blank=True, max_length=10000, null=True)),
                ('schedule', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('by_appointment', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Attach_therapist_organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultancy_fee', models.CharField(blank=True, max_length=10000, null=True)),
                ('email_attach', models.CharField(blank=True, max_length=10000, null=True)),
                ('telephone_attach', models.CharField(blank=True, max_length=10000, null=True)),
                ('schedule', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('by_appointment', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='AttachWithDoctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultancy_fee', models.CharField(blank=True, max_length=10000, null=True)),
                ('email_attach', models.CharField(blank=True, max_length=10000, null=True)),
                ('telephone_attach', models.CharField(blank=True, max_length=10000, null=True)),
                ('did', models.TextField(blank=True, default='', help_text='Org attach with doctor  DID', null=True)),
                ('extension', models.TextField(blank=True, default='', help_text='Org attach with doctor extension', null=True)),
                ('department', models.TextField(blank=True, default='', null=True)),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BloodBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('license', models.CharField(blank=True, max_length=10000, null=True)),
                ('address_1', models.CharField(blank=True, max_length=10000, null=True)),
                ('address_2', models.CharField(blank=True, max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('telephone', models.CharField(blank=True, help_text='Blood Bank Telephone', max_length=20000, null=True)),
                ('telephone_2', models.CharField(blank=True, help_text='Blood Bank Telephone_2', max_length=20, null=True)),
                ('telephone_3', models.CharField(blank=True, help_text='Blood Bank Telephone_3', max_length=20, null=True)),
                ('mobile', models.CharField(blank=True, help_text='Blood Bank mobile', max_length=20000, null=True)),
                ('services', models.CharField(blank=True, max_length=2000, null=True)),
                ('blood_bank_doctor', models.CharField(blank=True, help_text='Blood Bank Doctor', max_length=10000, null=True)),
                ('education', models.CharField(blank=True, help_text='Education Rename', max_length=10000, null=True)),
                ('stars', models.CharField(blank=True, max_length=10000, null=True)),
                ('previous_user', models.IntegerField(null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('timings', models.CharField(blank=True, help_text='Bloodbank timing', max_length=10000, null=True)),
                ('bloodbank_schedule', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('is_emergency', models.BooleanField(default=False)),
                ('pricing', models.CharField(blank=True, help_text='Blood Bank Pricing', max_length=20000, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('verified_fields', django.contrib.postgres.fields.jsonb.JSONField(default=[{'Name': False}, {'Address-1': False}, {'Address-2': False}, {'Services': False}, {'Country': False}, {'States': False}, {'City': False}, {'Location': False}, {'Pincode': False}, {'Blood-Bank-Doctor': False}, {'Education': False}, {'Telephone': False}, {'License': False}, {'Mobile': False}, {'Stars': False}, {'Pricing': False}, {'Emergency-Services': False}], null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BloodBankServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Listing of Blood Bank Services', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Blood Bank Service')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Category')),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('city_code', models.CharField(blank=True, max_length=10, null=True)),
                ('delete', models.BooleanField(default=False)),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Citymaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('deletee', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Country')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Country',
                'verbose_name_plural': 'Country',
            },
        ),
        migrations.CreateModel(
            name='Countrymaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000, unique=True)),
                ('deletee', models.BooleanField(default=False, help_text='Deactivate Country')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='department_master', max_length=1000)),
                ('delete', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dietician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('location', models.CharField(blank=True, help_text='Dietician Location', max_length=500, null=True)),
                ('telephone', models.CharField(blank=True, help_text='Dietician Telephone', max_length=20, null=True)),
                ('working_hours', models.CharField(blank=True, help_text='Dietician Timings', max_length=200)),
                ('ratings', models.CharField(blank=True, max_length=50)),
                ('email', models.CharField(blank=True, max_length=100)),
                ('associated_organisation', models.CharField(blank=True, max_length=500)),
                ('address', models.CharField(blank=True, max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('packages', models.CharField(blank=True, max_length=100)),
                ('is_disable', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dietitian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('institution', models.CharField(help_text='Institution', max_length=10000)),
                ('qualification', models.CharField(help_text='Qualification', max_length=10000)),
                ('experience', models.CharField(help_text='experience', max_length=10000)),
                ('type', models.CharField(blank=True, help_text='Dietitian Type', max_length=20000, null=True)),
                ('services', models.CharField(blank=True, help_text='Dietitian Services', max_length=20000, null=True)),
                ('rates', models.CharField(blank=True, help_text='Dietitian Rates', max_length=1000, null=True)),
                ('packages', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('address', models.CharField(blank=True, help_text='Dietitian Center  Address', max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('email', models.CharField(blank=True, help_text='Dietitian Email', max_length=1000, null=True)),
                ('telephone', models.CharField(blank=True, help_text='Dietitian Telephone', max_length=20000, null=True)),
                ('alternate_telephone', models.CharField(blank=True, help_text='Dietitian Alternate Telephone', max_length=20000, null=True)),
                ('mobile', models.CharField(blank=True, help_text='Dietitian Telephone', max_length=20000, null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('remarks', models.CharField(blank=True, help_text='Remarks', max_length=30000, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dietitian_type_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='deactivate_dietitian_type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DietitianServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Dietitian Services', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='deactivate_dietitian_service')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_title', models.CharField(blank=True, help_text='Topic Title', max_length=30000, null=True)),
                ('doctors_category', models.CharField(blank=True, help_text='Topic Title', max_length=30000, null=True)),
                ('disease_image_file_name', models.CharField(blank=True, help_text='Topic Title', max_length=30000, null=True)),
                ('related_topics', models.TextField(blank=True, max_length=30000, null=True)),
                ('small_description', models.CharField(blank=True, max_length=30000, null=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('disease_docx_file', models.FileField(max_length=30000, null=True, upload_to=b'/var/cms/cms/media/articles/docx/disease')),
                ('disease_html_raw', models.TextField(null=True)),
                ('disease_html_refined', models.TextField(null=True)),
                ('tag_string', models.TextField(blank=True, max_length=30000, null=True)),
                ('previous_user', models.IntegerField(null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('page_title', models.TextField(blank=True, max_length=250, null=True)),
                ('page_keywords', models.TextField(blank=True, max_length=500, null=True)),
                ('page_description', models.TextField(blank=True, max_length=800, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Disease_Category_search_mapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease_name', models.CharField(help_text='Disease Name', max_length=10000)),
                ('categories', models.CharField(blank=True, help_text='Stores the ids of categories in the category table', max_length=10000, null=True)),
                ('disease_name_translation', models.CharField(blank=True, help_text='Disease Name Translation', max_length=10000, null=True)),
                ('disease_name_transliteration', models.CharField(blank=True, help_text='Disease Name Transliteration', max_length=10000, null=True)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Country Disease Mapping')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Disease_search_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name', max_length=350, null=True, unique=True)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Disease_search_master')),
                ('doctor_categories', models.CharField(default='', max_length=3000)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Disease_type_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='deactivate_disease_type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doc_Care_services_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_doc_care_service_type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doc_Cat_SO_Speciality_Association',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(blank=True, null=True, unique=True)),
                ('Specialities', models.TextField(default='')),
                ('ServiceOffered', models.TextField(default='')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doc_Cat_SO_Speciality_Association_Final',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(blank=True, null=True, unique=True)),
                ('Specialities', models.TextField(default='')),
                ('ServiceOffered', models.TextField(default='')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(help_text='Listing of Doctor View', max_length=10000)),
                ('image_url', models.CharField(blank=True, max_length=10000, null=True)),
                ('speciality', models.CharField(blank=True, max_length=10000, null=True)),
                ('service_offered', models.CharField(blank=True, max_length=10000, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('mobile_no', models.CharField(blank=True, max_length=10000, null=True)),
                ('phone', models.CharField(blank=True, max_length=10000, null=True)),
                ('skype_id', models.CharField(blank=True, max_length=10000)),
                ('email', models.CharField(blank=True, max_length=10000, null=True)),
                ('secondary_email', models.CharField(blank=True, max_length=10000, null=True)),
                ('doctor_experience_year', models.CharField(blank=True, max_length=500, null=True)),
                ('qualification_data', models.TextField(null=True)),
                ('registration_data', models.TextField(null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('male_doctor', models.BooleanField(default=False)),
                ('female_doctor', models.BooleanField(default=False)),
                ('publish', models.BooleanField(default=False)),
                ('is_emergency', models.BooleanField(default=False)),
                ('emergency_fee', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('localities', models.TextField(blank=True, default='', max_length=1000, null=True)),
                ('talk_to_doc', models.BooleanField(default=False)),
                ('talk_fee', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('provides_home_care', models.BooleanField(default=False)),
                ('care_services_provided', models.CharField(blank=True, max_length=500, null=True)),
                ('doctor_alternate_phone_number', models.CharField(blank=True, max_length=500, null=True)),
                ('doctor_areas_covered', models.CharField(blank=True, max_length=500, null=True)),
                ('doctor_rates', models.CharField(blank=True, max_length=500, null=True)),
                ('doctors_packages', models.CharField(blank=True, max_length=1000, null=True)),
                ('doctor_care_schedule_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('associated_diseases', models.TextField(blank=True, default='', max_length=10000, null=True)),
                ('associated_symptoms', models.TextField(blank=True, default='', max_length=10000, null=True)),
                ('did', models.TextField(blank=True, default='', help_text='Doctor hfu DID', null=True)),
                ('extension', models.TextField(blank=True, default='', help_text='Doctor hfu extension', null=True)),
                ('points', models.FloatField(default=0, null=True)),
                ('verified_fields', django.contrib.postgres.fields.jsonb.JSONField(default=[{'Name': False}, {'Category': False}, {'Speciality': False}, {'Service-Offered': False}, {'Registration-Detail': False}, {'Zone': False}, {'Zone-Location': False}, {'Qualification': False}, {'Years-of-Experience': False}, {'Talk-to-Doc': False}, {'Talk-To-Doc-Fee': False}, {'Gender': False}, {'DOB': False}, {'Mobile': False}, {'Telephone': False}, {'Email': False}, {'Secondary-Email': False}, {'Skype-ID': False}, {'Emergency-Services': False}, {'Emergency-Fee': False}, {'Emergency-Country': False}, {'Emergency-State': False}, {'Emergency-City': False}, {'Emergency-Locality': False}, {'Rewards-and-Recognition': False}, {'Membership': False}, {'Education': False}, {'Experience': False}, {'Attached-Organisation-Name': False}, {'Organisation-Consultation-Timing': False}, {'Consultation-Fees': False}], null=True)),
                ('catJSON', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('new_service_offered', models.TextField(blank=True, default='', null=True)),
                ('new_service_offered_final', models.TextField(blank=True, default='', null=True)),
                ('new_speciality', models.TextField(blank=True, default='', null=True)),
                ('new_speciality_final', models.TextField(blank=True, default='', null=True)),
                ('audio', models.BooleanField(default=False)),
                ('video', models.BooleanField(default=False)),
                ('chat', models.BooleanField(default=False)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Category')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Doctor_Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_data', models.TextField(null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor_Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience_data', models.TextField()),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor_ServiceOffered_New',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, unique=True)),
                ('deleete', models.BooleanField(default=False, help_text='Deactivate Service Offered')),
                ('soids', models.TextField(default='')),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('WorL', models.TextField(blank=True, default='', null=True)),
                ('related_winners', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor_Speciality_New',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True, unique=True)),
                ('deleete', models.BooleanField(default=False, help_text='Deactivate Speciality')),
                ('speids', models.TextField(default='')),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('WorL', models.TextField(blank=True, default='', null=True)),
                ('related_winners', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Topic Title', max_length=10000)),
                ('generic_name', models.CharField(blank=True, max_length=10000, null=True)),
                ('brand_name', models.CharField(blank=True, max_length=10000, null=True)),
                ('manufacturer_name', models.CharField(blank=True, max_length=10000, null=True)),
                ('composition', models.CharField(blank=True, max_length=10000, null=True)),
                ('form_n_rate', models.CharField(blank=True, max_length=10000, null=True)),
                ('dosage', models.CharField(blank=True, max_length=10000, null=True)),
                ('mode_of_administration', models.CharField(blank=True, max_length=10000, null=True)),
                ('indication', models.CharField(blank=True, max_length=10000, null=True)),
                ('overdose', models.CharField(blank=True, max_length=10000, null=True)),
                ('contraindication', models.CharField(blank=True, max_length=10000, null=True)),
                ('special_precaution', models.CharField(blank=True, max_length=10000, null=True)),
                ('adverse_drug_reactions', models.CharField(blank=True, max_length=10000, null=True)),
                ('drug_interaction', models.CharField(blank=True, max_length=10000, null=True)),
                ('lab_interference', models.CharField(blank=True, max_length=10000, null=True)),
                ('mechanism_of_action', models.CharField(blank=True, max_length=10000, null=True)),
                ('drug_class', models.CharField(blank=True, max_length=10000, null=True)),
                ('atc_classification', models.CharField(blank=True, max_length=10000, null=True)),
                ('schedule_classification', models.CharField(blank=True, max_length=10000, null=True)),
                ('previous_user', models.IntegerField(null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Dummy_cat_disease_aasociation',
            fields=[
                ('cat_id', models.AutoField(primary_key=True, serialize=False)),
                ('diseaseid', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='facility', max_length=1000)),
                ('delete', models.BooleanField(default=False)),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lab_accreditation_body_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('address', models.CharField(blank=True, max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('telephone', models.CharField(blank=True, help_text='Pathology_Telephone', max_length=200, null=True)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Lab_Accredition_Body')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lab_branches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branches', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lab_department_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Lab_department')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lab_services_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Lab_services')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lab_test_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Lab_Test')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lab_type_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Lab_Type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Labs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('telephone', models.CharField(blank=True, help_text='Pathology Telephone', max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('lab_collection_timing', models.CharField(blank=True, help_text='Lab Collection Timing', max_length=1000)),
                ('ratings', models.CharField(blank=True, max_length=50)),
                ('pathology_doctor_name', models.CharField(blank=True, max_length=200)),
                ('pathology_email', models.CharField(blank=True, max_length=100)),
                ('authorization_body', models.CharField(blank=True, max_length=100)),
                ('home_sample_collection', models.BooleanField(default=False)),
                ('e_reporting_dispatch', models.BooleanField(default=False)),
                ('rate', models.CharField(blank=True, max_length=100)),
                ('is_disable', models.BooleanField(default=False)),
                ('timings', models.CharField(blank=True, help_text='Lab timing', max_length=10000, null=True)),
                ('tests', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('lab_doctors_on_board', models.CharField(blank=True, max_length=20000, null=True)),
                ('lab_authorised_person_name', models.CharField(blank=True, max_length=20000, null=True)),
                ('lab_authorised_person_designation', models.CharField(blank=True, max_length=20000, null=True)),
                ('lab_authorised_person_contact_no', models.CharField(blank=True, max_length=20000, null=True)),
                ('lab_authorised_person_emailid', models.CharField(blank=True, max_length=20000, null=True)),
                ('lab_emailid', models.CharField(blank=True, max_length=20000, null=True)),
                ('lab_website', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_emergency', models.BooleanField(default=False)),
                ('lab_accreditation_body', models.CharField(blank=True, max_length=2000, null=True)),
                ('lab_mobile', models.CharField(blank=True, max_length=2000, null=True)),
                ('lab_services', models.CharField(blank=True, max_length=2000, null=True)),
                ('lab_schedule', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('lab_departments', models.CharField(blank=True, max_length=2000, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('did', models.TextField(blank=True, default='', help_text='Lab hfu DID', null=True)),
                ('extension', models.TextField(blank=True, default='', help_text='Lab hfu extension', null=True)),
                ('verified_fields', django.contrib.postgres.fields.jsonb.JSONField(default=[{'Name': False}, {'Address': False}, {'Pincode': False}, {'Lab-Type': False}, {'Lab-Accredition-Body': False}, {'Lab-Services': False}, {'Lab-Departments': False}, {'Country': False}, {'States': False}, {'City': False}, {'Location': False}, {'Area-Covered': False}, {'Emergency-Services': False}, {'Telephone': False}, {'Mobile': False}, {'DID': False}, {'Extension': False}, {'Email': False}, {'Lab-Collection-Timings': False}, {'Ratings': False}, {'Lab-Authorised-Person-Name': False}, {'Lab-Authorised-Person-Designation': False}, {'Lab-Authorised-Person-Contact-No': False}, {'Lab-Authorised-Person-Emailid': False}, {'Lab-Website': False}, {'Pathology-Doctor-Names': False}, {'Lab-Tests': False}], null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Labs_plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_details', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Labs')),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.TextField(blank=True, null=True)),
                ('firstName', models.TextField(blank=True, db_column='firstName', null=True)),
                ('lastName', models.TextField(blank=True, db_column='lastName', null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('mobileNo', models.TextField(blank=True, db_column='mobileNo', null=True)),
                ('category', models.IntegerField(blank=True, null=True)),
                ('speciality', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('activate', models.BooleanField(default=False)),
                ('edit', models.BooleanField(default=True)),
                ('serviceOffered', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('dob', models.TextField(blank=True, null=True)),
                ('mciRegistrationNo', models.TextField(blank=True, db_column='mciRegistrationNo', null=True)),
                ('elastic_unique_id', models.IntegerField(blank=True, null=True)),
                ('registrationBoard', models.TextField(blank=True, db_column='registrationBoard', null=True)),
                ('registrationYear', models.IntegerField(blank=True, db_column='registrationYear', null=True)),
                ('alternateMobileNo', models.TextField(blank=True, db_column='alternateMobileNo', null=True)),
                ('alternateEmail', models.TextField(blank=True, db_column='alternateEmail', null=True)),
                ('gender', models.TextField(blank=True, null=True)),
                ('phoneNo', models.TextField(blank=True, db_column='phoneNo', null=True)),
                ('fax', models.TextField(blank=True, null=True)),
                ('skypeId', models.TextField(blank=True, db_column='skypeId', null=True)),
                ('stamp', models.TextField(blank=True, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('profileImage', models.TextField(blank=True, db_column='profileImage', null=True)),
                ('degreeCertImage', models.TextField(blank=True, db_column='degreeCertImage', null=True)),
                ('aadhaarCardImage', models.TextField(blank=True, db_column='aadhaarCardImage', null=True)),
                ('hfuId', models.TextField(blank=True, db_column='hfuId', null=True, unique=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('cuser', models.IntegerField(blank=True, null=True)),
                ('cstage', models.IntegerField(blank=True, null=True)),
                ('accountCreated', models.BooleanField(default=False)),
                ('activationStatus', models.BooleanField(default=False)),
                ('experience_points', models.FloatField(default=0, null=True)),
                ('emergency_points', models.FloatField(default=0, null=True)),
                ('qualification_points', models.FloatField(default=0, null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('did', models.TextField(blank=True, default='', help_text='LiveDoctor hfu DID', null=True)),
                ('extension', models.TextField(blank=True, default='', help_text='LIveDoctor hfu extension', null=True)),
                ('privateimagepath', models.TextField(blank=True, null=True)),
                ('updated_via', models.TextField(blank=True, null=True)),
                ('associated_diseases', models.TextField(blank=True, default='', max_length=10000, null=True)),
                ('associated_symptoms', models.TextField(blank=True, default='', max_length=10000, null=True)),
                ('verified_fields', django.contrib.postgres.fields.jsonb.JSONField(default=[{'First-Name': False}, {'Last-Name': False}, {'Category': False}, {'Speciality': False}, {'Service-Offered': False}, {'Gender': False}, {'DOB': False}, {'Zone': False}, {'Zone-Location': False}, {'DID': False}, {'Extension': False}, {'Mobile': False}, {'Telephone': False}, {'Fax': False}, {'Email': False}, {'Secondary-Email': False}, {'Skype-ID': False}, {'Education': False}, {'Registration-Detail': False}, {'Experience': False}, {'Rewards-and-Recognition': False}, {'Membership': False}, {'Qualification': False}, {'Years-of-Experience': False}, {'Talk-to-Doc': False}, {'Talk-To-Doc-Fee': False}, {'Emergency-Services': False}, {'Emergency-Fee': False}, {'Emergency-Country': False}, {'Emergency-State': False}, {'Emergency-City': False}, {'Emergency-Locality': False}, {'Attached-Organisation-Name': False}, {'Organisation-Consultation-Timing': False}, {'Consultation-Fees': False}, {'Attached-Organisation-DID': False}, {'Attached-Organisation-Extension': False}, {'Attached-Organisation-State': False}, {'Attached-Organisation-City': False}, {'Attached-Organisation-Locality': False}, {'Certificate': False}, {'Adhar-Card-Copy': False}], null=True)),
                ('merge_fields', django.contrib.postgres.fields.jsonb.JSONField(default=[], null=True)),
                ('new_service_offered_final', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('new_speciality_final', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('sponsored_rank', django.contrib.postgres.fields.jsonb.JSONField(default={'CC_RANK_list': {}, 'CLC_RANK_list': {}})),
                ('subscribed_rank', django.contrib.postgres.fields.jsonb.JSONField(default={'CC_RANK_list': {}, 'CLC_RANK_list': {}})),
                ('trial_rank', django.contrib.postgres.fields.jsonb.JSONField(default={'CC_RANK_list': {}, 'CLC_RANK_list': {}})),
                ('current_user', models.ForeignKey(default=54, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor_Associated_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(blank=True, null=True)),
                ('talk_to_doc', models.BooleanField(default=False)),
                ('talk_fee', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('audio', models.BooleanField(default=False)),
                ('video', models.BooleanField(default=False)),
                ('chat', models.BooleanField(default=False)),
                ('provides_home_care', models.BooleanField(default=False)),
                ('care_services_provided', models.CharField(blank=True, max_length=500, null=True)),
                ('doctor_alternate_phone_number', models.CharField(blank=True, max_length=500, null=True)),
                ('doctor_areas_covered', models.CharField(blank=True, max_length=500, null=True)),
                ('doctor_rates', models.CharField(blank=True, max_length=500, null=True)),
                ('doctors_packages', models.CharField(blank=True, max_length=1000, null=True)),
                ('doctor_care_schedule_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('is_emergency', models.BooleanField(default=False)),
                ('emergency_fee', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('localities', models.TextField(blank=True, default='', max_length=1000, null=True)),
                ('qualification_data', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('totalexperience', models.TextField(blank=True, default='', max_length=100, null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor_Commonworkschedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(blank=True, null=True)),
                ('clinic_id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('speciality', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('mobileNo', models.TextField(blank=True, db_column='mobileNo', null=True)),
                ('registrationNo', models.TextField(blank=True, db_column='registrationNo', null=True)),
                ('elastic_unique_id', models.IntegerField(blank=True, null=True)),
                ('confirmation', models.TextField(blank=True, null=True)),
                ('dataSharing', models.TextField(blank=True, db_column='dataSharing', null=True)),
                ('hospital', models.TextField(blank=True, null=True)),
                ('designation', models.TextField(blank=True, null=True)),
                ('appointmentMinute', models.IntegerField(blank=True, db_column='appointmentMinute', null=True)),
                ('consultingCharge', models.IntegerField(blank=True, db_column='consultingCharge', null=True)),
                ('time_type', models.TextField(blank=True, null=True)),
                ('time', models.TextField(blank=True, null=True)),
                ('slot', models.TextField(blank=True, null=True)),
                ('stamp', models.TextField(blank=True, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('defaultClinicFlag', models.BooleanField(default=False)),
                ('timing', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('time_object', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('did', models.TextField(blank=True, default='', help_text='Live Doctor Schedule DID', null=True)),
                ('extension', models.TextField(blank=True, default='', help_text='Live Doctor Schedule extension', null=True)),
                ('department', models.TextField(blank=True, default='', null=True)),
                ('status', models.TextField(blank=True, default='', help_text='Schedule Status', null=True)),
                ('associateWithClinic', models.BooleanField(default=False)),
                ('associated_by', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor_Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(blank=True, null=True)),
                ('degree', models.TextField(blank=True, null=True)),
                ('college', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor_Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('fromYear', models.IntegerField(blank=True, db_column='fromYear', null=True)),
                ('toYear', models.IntegerField(blank=True, db_column='toYear', null=True)),
                ('designation', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor_Imagegallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor_Manage_Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('plan_name', models.TextField(blank=True, null=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('amount', models.TextField(blank=True, null=True)),
                ('payment_mode', models.TextField(blank=True, null=True)),
                ('invoice', models.FileField(blank=True, null=True, upload_to=b'')),
                ('receipt', models.FileField(blank=True, null=True, upload_to=b'')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('livedoctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Live_Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor_Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor_Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, null=True)),
                ('updatedAt', models.DateTimeField(blank=True, null=True)),
                ('livedoctorCrAt', models.DateTimeField(blank=True, null=True)),
                ('livedoctorName', models.TextField(blank=True, default='', null=True)),
                ('updatedBy', models.TextField(blank=True, default='', null=True)),
                ('livedoctorStage', models.TextField(blank=True, default='', null=True)),
                ('update_Type', models.TextField(blank=True, default='', null=True)),
                ('deelete', models.BooleanField(default=False, help_text='Delete Notification')),
                ('livedoctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Live_Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Live_Doctor_Rewardrecog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('latitude', models.CharField(blank=True, max_length=10000, null=True)),
                ('longitude', models.CharField(blank=True, max_length=10000, null=True)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Locality')),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.City')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Locality',
                'verbose_name_plural': 'Localities',
            },
        ),
        migrations.CreateModel(
            name='Localitymaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('deletee', models.BooleanField(default=False, help_text='Deactivate Locality')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('citymaster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Citymaster')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='MedicalPharmacyStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('address', models.CharField(blank=True, max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('telephone', models.CharField(blank=True, help_text='Pharmacy Telephone', max_length=20000, null=True)),
                ('mobile', models.CharField(blank=True, help_text='Pharmacy mobile', max_length=20000, null=True)),
                ('type', models.CharField(blank=True, help_text='Pharmacy Type', max_length=20000, null=True)),
                ('services', models.CharField(blank=True, help_text='Pharmacy Service', max_length=20000, null=True)),
                ('timings', models.CharField(help_text='timings', max_length=10000, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=10000, null=True)),
                ('previous_user', models.IntegerField(null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('pharmacy_schedule', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('fax', models.CharField(blank=True, max_length=10000, null=True)),
                ('email', models.CharField(blank=True, max_length=10000)),
                ('website', models.CharField(blank=True, max_length=10000, null=True)),
                ('is_emergency', models.BooleanField(default=False)),
                ('publish', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('locality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Locality')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalPharmacyStoreServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Listing of Medical Pharmacy  Services', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Medical Pharmacy Service')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalPharmacyStoreType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Medical Pharmacy Type', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Medical Pharmacy Type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Nurse_Bureau',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('certification', models.CharField(help_text='Certification', max_length=10000)),
                ('experience', models.CharField(help_text='experience', max_length=10000)),
                ('services', models.CharField(blank=True, help_text='Nurse Bureau Services', max_length=20000, null=True)),
                ('speciality', models.CharField(blank=True, help_text='Nurse Bureau Speciality', max_length=20000, null=True)),
                ('address', models.CharField(blank=True, help_text='Nurse Bureau Center  Address', max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('email', models.CharField(blank=True, help_text='Nurse Bureau Center Email', max_length=1000, null=True)),
                ('nurse_bureau_schedule', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('rates', models.CharField(blank=True, help_text='Nurse Bureau Rates', max_length=1000, null=True)),
                ('telephone', models.CharField(blank=True, help_text='Nurse Bureau Center Telephone', max_length=20000, null=True)),
                ('mobile', models.CharField(blank=True, help_text='Nurse Bureau Center Telephone', max_length=20000, null=True)),
                ('contact_person', models.CharField(blank=True, help_text='Contact Person', max_length=10000, null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('branches', models.CharField(blank=True, max_length=10000, null=True)),
                ('website', models.CharField(blank=True, max_length=10000, null=True)),
                ('nurse_bureau_packages', models.CharField(blank=True, max_length=10000, null=True)),
                ('no_of_nurses', models.CharField(blank=True, max_length=10000, null=True)),
                ('nurses_experience', models.CharField(blank=True, max_length=10000, null=True)),
                ('contact_person_contact_no', models.CharField(blank=True, max_length=10000, null=True)),
                ('contact_person_email', models.CharField(blank=True, max_length=10000, null=True)),
                ('packages', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('remarks', models.CharField(blank=True, help_text='Remarks', max_length=30000, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('locality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Locality')),
                ('nurse_bureau_locality_coverage_from', models.ForeignKey(help_text='Nurse Bureau Location coverage from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nurse_bureau_locality_from', to='hfu_cms.Locality')),
                ('nurse_bureau_locality_coverage_to', models.ForeignKey(help_text='Nurse Bureau Location coverage to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nurse_bureau_locality_to', to='hfu_cms.Locality')),
            ],
        ),
        migrations.CreateModel(
            name='Nurse_bureau_speciality_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Nurse_Bureau_Type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nurse_bureauServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Listing of Nurse Bureau Services', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Nurse Bureau Service')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OranisationImagery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, help_text='image_url', max_length=10000, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation_branches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branches', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation_categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=1000, unique=True)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Hospital Category')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='organisation_Imagegallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation_plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_details', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation_profile_img',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='org_profile_image')),
                ('image_url', models.CharField(blank=True, max_length=600, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='organisation_Registrationimages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='organisation_Rewardrecog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation_types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(blank=True, max_length=1000, unique=True)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Hospital Type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility', models.CharField(blank=True, max_length=10000)),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('is_hospital', models.BooleanField(default=False)),
                ('is_clinic', models.BooleanField(default=False)),
                ('street', models.CharField(blank=True, max_length=10000)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=10000)),
                ('mobile_no', models.CharField(blank=True, max_length=10000)),
                ('fax', models.CharField(blank=True, max_length=10000, null=True)),
                ('email', models.CharField(blank=True, max_length=10000)),
                ('emergency_no', models.CharField(blank=True, max_length=10000)),
                ('website', models.CharField(blank=True, max_length=10000, null=True)),
                ('department', models.CharField(blank=True, max_length=10000, null=True)),
                ('niche_department', models.CharField(blank=True, max_length=10000, null=True)),
                ('doctors_on_board', models.CharField(blank=True, max_length=10000, null=True)),
                ('broucher', models.CharField(blank=True, max_length=10000, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('ambulance_service', models.BooleanField(default=False)),
                ('trauma_center', models.BooleanField(default=False)),
                ('burn_center', models.BooleanField(default=False)),
                ('ambulance_service_no', models.CharField(blank=True, max_length=10000, null=True)),
                ('year_of_establishment', models.CharField(blank=True, max_length=10000, null=True)),
                ('package', models.CharField(blank=True, max_length=10000, null=True)),
                ('latitude', models.CharField(blank=True, max_length=10000, null=True)),
                ('longitude', models.CharField(blank=True, max_length=10000, null=True)),
                ('schedule_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('publish', models.BooleanField(default=False)),
                ('is_disable', models.BooleanField(default=False)),
                ('other_facility', models.CharField(blank=True, max_length=10000, null=True)),
                ('no_of_beds', models.CharField(default='1', max_length=10000)),
                ('is_emergency', models.BooleanField(default=False)),
                ('did', models.TextField(blank=True, default='', help_text='Organisation hfu DID', null=True)),
                ('extension', models.TextField(blank=True, default='', help_text='Organisation hfu extension', null=True)),
                ('verified_fields', django.contrib.postgres.fields.jsonb.JSONField(default=[{'Is-hospital-or-Clinic': False}, {'Name': False}, {'Category': False}, {'Type': False}, {'Department': False}, {'Facility': False}, {'Other-Facility': False}, {'Address': False}, {'Country': False}, {'State': False}, {'City': False}, {'Location': False}, {'Pincode': False}, {'Niche-Department': False}, {'Package': False}, {'Phone': False}, {'DID': False}, {'Extension': False}, {'Email': False}, {'Fax': False}, {'Mobile': False}, {'Website': False}, {'Emergency-Contact-No': False}, {'Latitude': False}, {'Longitude': False}, {'Ambulance-Service-No': False}, {'Broucher': False}, {'Year-Of-Establishment': False}, {'Doctor-On-Board': False}, {'No-of-Beds': False}, {'Year-Of-Establishment': False}, {'Ambulance-Services': False}, {'Trauma-Center': False}, {'Burn-Center': False}, {'Emergency-Services': False}, {'Doctor-Association': False}, {'Profile-Image': False}], null=True)),
                ('hos_url', models.TextField(blank=True, default='', null=True)),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('user_id', models.TextField(blank=True, default='', null=True)),
                ('tagline', models.TextField(blank=True, default='', null=True)),
                ('stamp', models.TextField(blank=True, default='', null=True)),
                ('logo', models.TextField(blank=True, default='', null=True)),
                ('profileImage', models.TextField(blank=True, default='', null=True)),
                ('registration_details', models.TextField(blank=True, default='', null=True)),
                ('alternateEmail', models.TextField(blank=True, default='', null=True)),
                ('customer_organisation', models.BooleanField(default=False)),
                ('activation', models.BooleanField(default=False)),
                ('hfuId', models.TextField(blank=True, db_column='hfuId', null=True)),
                ('deelete', models.BooleanField(default=False)),
                ('is_live_org', models.BooleanField(default=False)),
                ('merge_field', django.contrib.postgres.fields.jsonb.JSONField(default=[], null=True)),
                ('finalise', models.BooleanField(default=False)),
                ('updated_via', models.TextField(blank=True, default='', null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('locality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Locality')),
            ],
        ),
        migrations.CreateModel(
            name='patienttoaskquestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.TextField(blank=True, default='', null=True)),
                ('doctor_id', models.TextField(blank=True, default='', null=True)),
                ('answer_id', models.TextField(blank=True, default='', null=True)),
                ('questionFor', models.TextField(blank=True, default='you', null=True)),
                ('questionType', models.TextField(blank=True, default='private', null=True)),
                ('questionDescription', models.TextField(blank=True, default='', null=True)),
                ('questionDetail1', models.TextField(blank=True, default='', null=True)),
                ('questionDetail2', models.TextField(blank=True, default='', null=True)),
                ('questionDetail3', models.TextField(blank=True, default='', null=True)),
                ('firstName', models.TextField(blank=True, default='', null=True)),
                ('lastName', models.TextField(blank=True, default='', null=True)),
                ('email', models.TextField(blank=True, default='', null=True)),
                ('mobileNo', models.TextField(blank=True, default='', null=True)),
                ('gender', models.TextField(blank=True, default='', null=True)),
                ('age', models.TextField(blank=True, default='', null=True)),
                ('category', models.TextField(blank=True, default='', null=True)),
                ('relation', models.TextField(blank=True, default='', null=True)),
                ('doctor_name', models.TextField(blank=True, default='', null=True)),
                ('doctor_category', models.TextField(blank=True, default='', null=True)),
                ('consultation_charge', models.FloatField(blank=True, null=True)),
                ('consultation_charge_type', models.TextField(blank=True, default='', null=True)),
                ('doctor_profile_image', models.TextField(blank=True, default='', null=True)),
                ('free', models.TextField(blank=True, default='', null=True)),
                ('paymentStatus', models.TextField(blank=True, default='', null=True)),
                ('patient_name', models.TextField(blank=True, default='', null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('transaction_id', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='patienttodoctorfeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.TextField(blank=True, default='', null=True)),
                ('doctor_id', models.IntegerField(blank=True, null=True)),
                ('title', models.TextField(blank=True, default='', null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('verified', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('name', models.TextField(blank=True, default='', null=True)),
                ('mobileNo', models.TextField(blank=True, default='', null=True)),
                ('email', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='pub_unpub_error_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, max_length=50, null=True)),
                ('date_n_time', models.DateField(blank=True, null=True)),
                ('model_type', models.TextField(blank=True, max_length=5000, null=True)),
                ('publish_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('model_instance_id', models.IntegerField(default=0, null=True)),
                ('error_message', models.CharField(blank=True, max_length=500, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rehab_speciality_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Rehab_Type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rehab_type_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Rehab_Type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RehabCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('clinic_name', models.CharField(help_text='Name', max_length=10000)),
                ('doctor_name', models.CharField(blank=True, max_length=30000)),
                ('experience', models.CharField(blank=True, max_length=30000, null=True)),
                ('qualification', models.CharField(blank=True, max_length=30000, null=True)),
                ('address', models.CharField(blank=True, help_text='Rehab Center  Address', max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('services', models.CharField(blank=True, help_text='Rehab Services', max_length=20000, null=True)),
                ('telephone', models.CharField(blank=True, help_text='Rehab Center Telephone', max_length=20000, null=True)),
                ('mobile', models.CharField(blank=True, help_text='Rehab Center Telephone', max_length=20000, null=True)),
                ('email', models.CharField(blank=True, help_text='Rehab Center Email', max_length=1000, null=True)),
                ('rates', models.CharField(blank=True, help_text='Rehab Rates', max_length=1000, null=True)),
                ('type', models.CharField(blank=True, help_text='Rehab Type', max_length=20000, null=True)),
                ('speciality', models.CharField(blank=True, help_text='Rehab Speciality', max_length=20000, null=True)),
                ('rehab_schedule', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('is_emergency', models.BooleanField(default=False)),
                ('website', models.CharField(blank=True, max_length=10000, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('locality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Locality')),
                ('rehab_locality_coverage_from', models.ForeignKey(help_text='Rehab Location coverage from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Rehab_locality_from', to='hfu_cms.Locality')),
                ('rehab_locality_coverage_to', models.ForeignKey(help_text='Rehab Location coverage to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Rehab_locality_to', to='hfu_cms.Locality')),
            ],
        ),
        migrations.CreateModel(
            name='RehabServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Listing of Rehab Services', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Rehab Service')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RewardRecognisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_data', models.TextField(null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('by_appointment', models.BooleanField(default=False)),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Doctor')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName')),
            ],
        ),
        migrations.CreateModel(
            name='Service_Offred',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('delete', models.BooleanField(default=False)),
                ('approve', models.BooleanField(default=False)),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Category')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Service Offer',
                'verbose_name_plural': 'Service Offers',
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('delete', models.BooleanField(default=False)),
                ('approve', models.BooleanField(default=False)),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Category')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Speciality',
                'verbose_name_plural': 'Specialities',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage_name', models.CharField(help_text='Stages', max_length=1000)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('state_code', models.CharField(blank=True, max_length=10, null=True)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate State')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
            },
        ),
        migrations.CreateModel(
            name='Statemaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000, unique=True)),
                ('deletee', models.BooleanField(default=False, help_text='Deactivate Country')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('countrymaster', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Countrymaster')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Symptoms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_title', models.CharField(blank=True, help_text='Topic Title', max_length=30000, null=True)),
                ('doctors_category', models.CharField(blank=True, help_text='Topic Title', max_length=30000, null=True)),
                ('symptoms_image_file_name', models.CharField(blank=True, help_text='Topic Title', max_length=30000, null=True)),
                ('related_topics', models.TextField(blank=True, max_length=30000, null=True)),
                ('small_description', models.CharField(blank=True, max_length=30000, null=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('symptoms_docx_file', models.FileField(max_length=30000, null=True, upload_to=b'/var/cms/cms/media/articles/docx/symptoms')),
                ('symptoms_html_raw', models.TextField(null=True)),
                ('symptoms_html_refined', models.TextField(null=True)),
                ('tag_string', models.TextField(blank=True, max_length=30000, null=True)),
                ('previous_user', models.IntegerField(null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('publish', models.BooleanField(default=False)),
                ('page_title', models.TextField(blank=True, max_length=250, null=True)),
                ('page_keywords', models.TextField(blank=True, max_length=500, null=True)),
                ('page_description', models.TextField(blank=True, max_length=800, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Symptoms_search_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name', max_length=350, null=True, unique=True)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Symptoms_search_master')),
                ('doctor_categories', models.CharField(default='', max_length=3000)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Therapist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('institution', models.CharField(help_text='Institution', max_length=10000)),
                ('qualification', models.CharField(help_text='Qualification', max_length=10000)),
                ('experience', models.CharField(help_text='experience', max_length=10000)),
                ('type', models.CharField(blank=True, help_text='Therapist Type', max_length=20000, null=True)),
                ('services', models.CharField(blank=True, help_text='Therapist Services', max_length=20000, null=True)),
                ('speciality', models.CharField(blank=True, help_text='Therapist Speciality', max_length=20000, null=True)),
                ('rates', models.CharField(blank=True, help_text='Therapist Rates', max_length=1000, null=True)),
                ('packages', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('address', models.CharField(blank=True, help_text='Therapist Center  Address', max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('email', models.CharField(blank=True, help_text='Therapist Email', max_length=1000, null=True)),
                ('telephone', models.CharField(blank=True, help_text='Therapist Telephone', max_length=20000, null=True)),
                ('alternate_telephone', models.CharField(blank=True, help_text='Therapist Alternate Telephone', max_length=20000, null=True)),
                ('mobile', models.CharField(blank=True, help_text='Therapist Telephone', max_length=20000, null=True)),
                ('is_disable', models.BooleanField(default=False)),
                ('remarks', models.CharField(blank=True, help_text='Remarks', max_length=30000, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('locality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Locality')),
            ],
        ),
        migrations.CreateModel(
            name='Therapist_speciality_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate_Therapist_Type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Therapist_type_master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='deactivate_therapist_type')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Therapists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_user', models.IntegerField(null=True)),
                ('free_text', models.TextField(blank=True, max_length=5000, null=True)),
                ('name', models.CharField(help_text='Name', max_length=10000)),
                ('location', models.CharField(blank=True, help_text='Therapist Location', max_length=500, null=True)),
                ('telephone', models.CharField(blank=True, help_text='Therapist Telephone', max_length=20, null=True)),
                ('address', models.CharField(blank=True, max_length=10000, null=True)),
                ('pincode', models.CharField(blank=True, help_text='Pin code', max_length=10)),
                ('working_hours', models.CharField(blank=True, help_text='Therapist Timings', max_length=200)),
                ('ratings', models.CharField(blank=True, max_length=50)),
                ('therapist_qualification', models.CharField(blank=True, max_length=200)),
                ('email', models.CharField(blank=True, max_length=100)),
                ('services_at_home', models.BooleanField(default=False)),
                ('is_disable', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country')),
                ('current_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TherapistServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Therapist Services', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='deactivate_therapist_service')),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ttteempp_for_association_so',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soid', models.IntegerField(null=True)),
                ('soname', models.TextField(blank=True, null=True)),
                ('categories', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ttteempp_for_association_so_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soid', models.IntegerField(null=True)),
                ('categoryid', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ttteempp_for_association_so_3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryid', models.IntegerField(null=True)),
                ('categoryname', models.TextField(blank=True, null=True)),
                ('soids', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ttteempp_for_association_spe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speid', models.IntegerField(null=True)),
                ('spename', models.TextField(blank=True, null=True)),
                ('categories', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ttteempp_for_association_spe_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speid', models.IntegerField(null=True)),
                ('categoryid', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ttteempp_for_association_spe_3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryid', models.IntegerField(null=True)),
                ('categoryname', models.TextField(blank=True, null=True)),
                ('speids', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_caller', models.BooleanField(default=False)),
                ('is_reviewer', models.BooleanField(default=False)),
                ('is_publisher', models.BooleanField(default=False)),
                ('is_news', models.BooleanField(default=False)),
                ('is_service_plan', models.BooleanField(default=False)),
                ('is_news_reviewer', models.BooleanField(default=False)),
                ('is_doctor_reviewer', models.BooleanField(default=False)),
                ('is_service_reviewer', models.BooleanField(default=False)),
                ('is_path_reviewer', models.BooleanField(default=False)),
                ('is_blood_reviewer', models.BooleanField(default=False)),
                ('is_ambulance_reviewer', models.BooleanField(default=False)),
                ('is_phar_reviewer', models.BooleanField(default=False)),
                ('is_disease_reviewer', models.BooleanField(default=False)),
                ('is_physio_rehab_reviewer', models.BooleanField(default=False)),
                ('is_nurse_bureau_reviewer', models.BooleanField(default=False)),
                ('is_dietitian_reviewer', models.BooleanField(default=False)),
                ('is_therapist_reviewer', models.BooleanField(default=False)),
                ('is_doctor_caller', models.BooleanField(default=False)),
                ('is_phar_caller', models.BooleanField(default=False)),
                ('is_path_caller', models.BooleanField(default=False)),
                ('is_ambulance_caller', models.BooleanField(default=False)),
                ('is_blood_caller', models.BooleanField(default=False)),
                ('is_disease_caller', models.BooleanField(default=False)),
                ('is_physio_rehab_caller', models.BooleanField(default=False)),
                ('is_nurse_bureau_caller', models.BooleanField(default=False)),
                ('is_dietitian_caller', models.BooleanField(default=False)),
                ('is_therapist_caller', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('created_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ValidateByChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Listing of Zone', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Zone')),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Zone',
                'verbose_name_plural': 'Zones',
            },
        ),
        migrations.CreateModel(
            name='ZoneLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Listing of Zone location', max_length=10000)),
                ('delete', models.BooleanField(default=False, help_text='Deactivate Zone Location')),
                ('new_record', models.BooleanField(default=False)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('updatedAt', models.DateTimeField(blank=True, db_column='updatedAt', null=True)),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Zone')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'Zone Location',
                'verbose_name_plural': 'Zone Locations',
            },
        ),
        migrations.AddField(
            model_name='therapists',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='therapists',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='therapists',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='therapist',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='therapist',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='therapist',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='therapist',
            name='therapist_locality_coverage_from',
            field=models.ForeignKey(help_text='Therapist Location coverage from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Therapist_Locality_From', to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='therapist',
            name='therapist_locality_coverage_to',
            field=models.ForeignKey(help_text='Therapist Location coverage to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Therapist_Locality_To', to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='symptoms',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='symptoms',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='rehabcenter',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='rehabcenter',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='rehabcenter',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='organisationname',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='organisationname',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='organisationname',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='organisation_rewardrecog',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='organisation_registrationimages',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='organisation_profile_img',
            name='organisation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='organisation_plan',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='organisation_imagegallery',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='organisation_branches',
            name='organisation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='oranisationimagery',
            name='organisation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='nurse_bureau',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='nurse_bureau',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='nurse_bureau',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='medicalpharmacystore',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='medicalpharmacystore',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='medicalpharmacystore',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='live_doctor_associated_data',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='live_doctor',
            name='resource_validate',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='live_doctor',
            name='stage',
            field=models.ForeignKey(default=2, null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='live_doctor',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Zone'),
        ),
        migrations.AddField(
            model_name='live_doctor',
            name='zone_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ZoneLocation'),
        ),
        migrations.AddField(
            model_name='labs',
            name='lab_locality_coverage_from',
            field=models.ForeignKey(help_text='Location coverage from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locality_from', to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='labs',
            name='lab_locality_coverage_to',
            field=models.ForeignKey(help_text='Location coverage to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locality_to', to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='labs',
            name='lab_type',
            field=models.ForeignKey(help_text='Accreditation Body Master', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Lab_type_master'),
        ),
        migrations.AddField(
            model_name='labs',
            name='locality',
            field=models.ForeignKey(help_text='Location', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='labs',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='labs',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='labs',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='lab_branches',
            name='lab',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Labs'),
        ),
        migrations.AddField(
            model_name='drug',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='drug',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Zone'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='zone_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ZoneLocation'),
        ),
        migrations.AddField(
            model_name='disease',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='disease',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='dietitian',
            name='dietitian_locality_coverage_from',
            field=models.ForeignKey(help_text='Dietitian Location coverage from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Dietitian_Locality_From', to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='dietitian',
            name='dietitian_locality_coverage_to',
            field=models.ForeignKey(help_text='Dietitian Location coverage to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Dietitian_Locality_To', to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='dietitian',
            name='locality',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='dietitian',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='dietitian',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='dietitian',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='dietician',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='dietician',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='dietician',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='citymaster',
            name='statemaster',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Statemaster'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='bloodbank',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City'),
        ),
        migrations.AddField(
            model_name='bloodbank',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country'),
        ),
        migrations.AddField(
            model_name='bloodbank',
            name='current_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bloodbank',
            name='locality',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='bloodbank',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='bloodbank',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='bloodbank',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
        migrations.AddField(
            model_name='attachwithdoctor',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Doctor'),
        ),
        migrations.AddField(
            model_name='attachwithdoctor',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='attach_therapist_organisation',
            name='org_department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Department'),
        ),
        migrations.AddField(
            model_name='attach_therapist_organisation',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='attach_therapist_organisation',
            name='therapist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Therapist'),
        ),
        migrations.AddField(
            model_name='attach_dietitian_organisation',
            name='dietitian',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Dietitian'),
        ),
        migrations.AddField(
            model_name='attach_dietitian_organisation',
            name='org_department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Department'),
        ),
        migrations.AddField(
            model_name='attach_dietitian_organisation',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='associatedoctorwithorganization',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Department'),
        ),
        migrations.AddField(
            model_name='associatedoctorwithorganization',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Doctor'),
        ),
        migrations.AddField(
            model_name='associatedoctorwithorganization',
            name='organisation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.OrganisationName'),
        ),
        migrations.AddField(
            model_name='ambulance',
            name='ambulance_locality_coverage_from',
            field=models.ForeignKey(help_text='Ambulance Location coverage from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Ambulance_locality_from', to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='ambulance',
            name='ambulance_locality_coverage_to',
            field=models.ForeignKey(help_text='Ambulance Location coverage to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Ambulance_locality_to', to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='ambulance',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.City'),
        ),
        migrations.AddField(
            model_name='ambulance',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Country'),
        ),
        migrations.AddField(
            model_name='ambulance',
            name='current_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ambulance',
            name='locality',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.Locality'),
        ),
        migrations.AddField(
            model_name='ambulance',
            name='resource_validate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.ValidateByChoice'),
        ),
        migrations.AddField(
            model_name='ambulance',
            name='stage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hfu_cms.Stage'),
        ),
        migrations.AddField(
            model_name='ambulance',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hfu_cms.State'),
        ),
    ]
