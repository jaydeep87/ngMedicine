"""
Django settings for HealthDynamicsCMS project.

Generated by 'django-admin startproject' using Django 1.9.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'w4!pmm@)q0aj@2(=(26%ea!(ffa=s0+mpjmz33vqba-_40cqmw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hfu_cms',
    'news',
    'providers',
    'import_export',
    'rest_framework',
    'remote.apps.RemoteConfig',

]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'HealthDynamicsCMS.urls'
# TEMPLATE_LOADERS = (
#     'django.template.loaders.filesystem.Loader',
#     'django.template.loaders.app_directories.Loader'
# )

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        # 'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'debug': True,
            'loaders': ['django.template.loaders.filesystem.Loader',
                        'django.template.loaders.app_directories.Loader'
                        ],
        },
        # 'TEMPLATE_LOADERS': (
        #     'django.template.loaders.filesystem.Loader',
        #     'django.template.loaders.app_directories.Loader'
        # )

    },
]

WSGI_APPLICATION = 'HealthDynamicsCMS.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        #'NAME': 'march222017',  # Or path to database file if using sqlite3.
        #'NAME': 'dummy',  # Or path to database file if using sqlite3.

        # LOCAL DB
        #'NAME' : '8Feb2018-Beta-415pm',
        # 'NAME' : '20Feb2018-Betadb-445pm',
        # 'USER': 'postgres',
        # 'PASSWORD': '1234',
        # 'HOST': 'localhost',
        # 'PORT': '5432',

        # BETA DB
        # 'NAME' : 'july24migrated',
        # 'USER': 'postgres',
        # 'PASSWORD': '11',
        # 'HOST': 'localhost',
        # 'PORT': '5433',


        # LIVE DB
        'NAME' : 'jan23live2018',
        'USER': 'hfudb',
        'PASSWORD': 'qaz#W(rrhrhffff)34jdjdjdnn',
        'HOST': '103.53.197.216',
        'PORT': '5432',

    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
# List of finder classes that know how to find static files in

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_ROOT = '/var/cms/cms/media'
MEDIA_URL = '/media/'

STATIC_URL = '/static/'


EMAIL_HOST = 'mail.healthforu.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'alert@healthforu.com'
EMAIL_HOST_PASSWORD = 'hfujaguar!@#123467'
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = 'alert@healthforu.com'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

# EMAIL_HOST = 'localhost'
# DEFAULT_FROM_EMAIL = 'ni@abcdefgh.com'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DOCX_PATH_DISEASE = os.path.join(MEDIA_ROOT, 'articles/docx/disease')
DOCX_PATH_SYMPTOMS = os.path.join(MEDIA_ROOT, 'articles/docx/symptoms')
DOCX_PATH_NEWSFEED = os.path.join(MEDIA_ROOT, 'articles/docx/newsfeed') 
DOC_REG = os.path.join(MEDIA_ROOT, 'livedocdegree')
DOC_AADHAR = os.path.join(MEDIA_ROOT, 'livedocaadhar')
DOC_STAMP = os.path.join(MEDIA_ROOT, 'livedocstamp')
DOC_SIGNATURE = os.path.join(MEDIA_ROOT, 'livedocsignature')
DOC_PROFILE = os.path.join(MEDIA_ROOT, 'livedocprofile')
DOC_GALLERY = os.path.join(MEDIA_ROOT, 'livedocgallery')
DOC_RECIEPT_AND_INVOICE = os.path.join(MEDIA_ROOT, 'receipt_and_invoice')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': '/var/log/django-debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'WARNING',
            'propagate': True,
        },
    },
}